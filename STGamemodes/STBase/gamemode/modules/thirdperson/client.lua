---------------------- STBase-- By Spacetech--------------------local trlocal View = {}local Trace = {}local Distance = 150local AddToPlayer = Vector(0, 0, 60)function STGamemodes.ThirdPerson.GoodToGo(ply, Hat)	if(!ply or ply == LocalPlayer()) then		if(ply:InThirdPerson() or (IsValid(ply:GetNWEntity("Rollermine", false)) and !Hat)) then			if(ply:Alive() or ply:IsGhost()) then				return true			end		end	end	return falseendfunction STGamemodes.ThirdPerson.ShouldDrawLocalPlayer(ply)	if(STGamemodes.ThirdPerson.GoodToGo(ply)) then		return true	endendhook.Add("ShouldDrawLocalPlayer", "STGamemodes.ThirdPerson.ShouldDrawLocalPlayer", STGamemodes.ThirdPerson.ShouldDrawLocalPlayer)function STGamemodes.ThirdPerson.CalcView(ply, origin, angles, fov)	if(!STGamemodes.ThirdPerson.GoodToGo(ply)) then		return	end		View.angles = angles + (STRTD.Angle or Angle( 0, 0, 0 ))	View.fov = fov		Distance = 150		if(IsValid(ply:GetNWEntity("Rollermine", false))) then		Trace.start = ply:GetNWEntity("Rollermine"):GetPos() + AddToPlayer	else		Trace.start = ply:GetPos() + AddToPlayer	end		Trace.endpos = Trace.start + View.angles:Forward() * -Distance	Trace.mask = MASK_SOLID_BRUSHONLY	tr = util.TraceLine(Trace)		if(tr.Fraction < 1) then		Distance = Distance * tr.Fraction	end		View.origin = Trace.start + View.angles:Forward() * -Distance * 0.95	return Viewendhook.Add("CalcView", "STGamemodes.ThirdPerson.CalcView", STGamemodes.ThirdPerson.CalcView)