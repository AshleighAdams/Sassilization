---------------------- STBase-- By Spacetech--------------------STGamemodes.TouchEvents = {}STGamemodes.TouchEvents.Entitys = {}function STGamemodes.TouchEvents:Setup(...)	local arg = {...}	if #arg < 3 then Msg("Invalid TouchEvent arguments!\n") return end		if type(arg[2]) == "number" then -- sphere			local pos, radius, func = arg[1], arg[2], arg[3]		if(self.Entitys[pos] and STValidEntity(self.Entitys[pos].Ent)) then			self.Entitys[pos].Ent:Remove()		end		self.Entitys[pos] = {Radius = radius, Function = func}			elseif type(arg[2]) == "Vector" then -- box		local min, max, func, func2 = arg[1], arg[2], arg[3], arg[4]		if(self.Entitys[min] and STValidEntity(self.Entitys[min].Ent)) then			self.Entitys[min].Ent:Remove()		end		self.Entitys[min] = {Max = max, Function = func, Function2 = func2}			else		Msg("Invalid TouchEvent setup!\n")	endendfunction STGamemodes.TouchEvents:Create(Pos, Table)	local Ent = ents.Create("st_touchevent")	Ent:SetPos(Pos)		if Table.Radius then -- sphere		Ent:SetupSphere(Table.Radius, Table.Function, Table.Function2)	elseif Table.Max then -- box		Ent:SetupBox(Pos, Table.Max, Table.Function, Table.Function2)	end		Ent:Spawn()	Ent:Activate()	return Entendfunction STGamemodes.TouchEvents:Check(Pos, Table)	if(!STValidEntity(Table.Ent)) then		Table.Ent = self:Create(Pos, Table)	end	return Tableendfunction STGamemodes.TouchEvents:CheckAll()	for k,v in pairs(self.Entitys) do		self.Entitys[k] = self:Check(k, v)	endendfunction STGamemodes.TouchEvents:RemoveAll()	for k,v in pairs(self.Entitys) do		if(STValidEntity(v.Ent)) then			v.Ent:Remove()		end	endend-- hook.Add("OnRoundChange", "TouchEvent.CheckAll", TouchEvent.CheckAll)-- hook.Add("InitPostEntity", "TouchEvent.CheckAll", TouchEvent.CheckAll)